# -*- coding: utf-8 -*-
"""dataMininigPreproccessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sXaBhLTBhcrBYkspef2f4AbsrnNlcfiX
"""

import pandas as pd
import numpy as np
from google.colab import drive

def convert_date(date_and_time):
    string_form = str(date_and_time)
    string_form = string_form.replace('-', '')
    string_form = string_form.replace(':', '')
    string_form = string_form.replace(' ', '')
    return string_form

drive.mount('/content/drive')

product_dataFrame = pd.read_excel("/content/drive/MyDrive/digikalaData/product.xlsx")
product_dataFrame.drop_duplicates()
product_dataFrame.dropna()

product_dataFrame = product_dataFrame[product_dataFrame['category_title_fa'].str.len() >= 3]
product_dataFrame = product_dataFrame[product_dataFrame['brand_name_fa'].str.len() >= 3]
product_dataFrame = product_dataFrame[product_dataFrame['brand_name_en'].str.len() >= 3]
product_dataFrame = product_dataFrame[product_dataFrame['url_code'].str.len() >= 3]

persian_alphabet = ['ا','ب','پ','ت','ث','ج','چ','ح','خ','د','ذ','ر','ز','ژ','ط','ظ','ع','غ','ق','ف','ث','ص','ض','م','ن','ک','گ','س','ش','ی','ه']
product_dataFrame = product_dataFrame[~product_dataFrame['product_title_en'].isin(persian_alphabet)]
product_dataFrame = product_dataFrame[~product_dataFrame['brand_name_en'].isin(persian_alphabet)]

product_dataFrame.product_title_en = product_dataFrame.product_title_en.fillna("empty")
product_dataFrame.title_alt = product_dataFrame.title_alt.fillna("empty")


count = product_dataFrame['url_code'].isna().sum()
del product_dataFrame['id']
del product_dataFrame['product_attributes']
product_dataFrame

product_dataFrame.describe()

tarikhche_kharid_dataFrame = pd.read_csv("/content/drive/MyDrive/digikalaData/tarikhche kharid.csv", sep = ",")
count_na = tarikhche_kharid_dataFrame['selling_price'].isna().sum()
count_all = tarikhche_kharid_dataFrame['selling_price'].count()
print("selling_price" , count_na/count_all)
count_na = tarikhche_kharid_dataFrame['rrp_price'].isna().sum()
count_all = tarikhche_kharid_dataFrame['rrp_price'].count()
print("rrp_price" , count_na/count_all)
count_na = tarikhche_kharid_dataFrame['show_in_price_history'].isna().sum()
count_all = tarikhche_kharid_dataFrame['show_in_price_history'].count()
print("show_in_price_history" , count_na/count_all)
count_na = tarikhche_kharid_dataFrame['base_price'].isna().sum()
count_all = tarikhche_kharid_dataFrame['base_price'].count()
print("base_price" , count_na/count_all)
count_na = tarikhche_kharid_dataFrame['buy_price'].isna().sum()
count_all = tarikhche_kharid_dataFrame['buy_price'].count()
print("buy_price" , count_na/count_all)

tarikhche_kharid_dataFrame = pd.read_csv("/content/drive/MyDrive/digikalaData/tarikhche kharid.csv", sep = ",")
tarikhche_kharid_dataFrame['base_price'] = pd.to_numeric(tarikhche_kharid_dataFrame['base_price'], errors='coerce')
tarikhche_kharid_dataFrame['base_price'] = tarikhche_kharid_dataFrame['base_price'].fillna(0)
tarikhche_kharid_dataFrame['buy_price'] = pd.to_numeric(tarikhche_kharid_dataFrame['buy_price'], errors='coerce')
tarikhche_kharid_dataFrame['buy_price'] = tarikhche_kharid_dataFrame['base_price'].fillna(0)
tarikhche_kharid_dataFrame.drop_duplicates()
del tarikhche_kharid_dataFrame['id']
del tarikhche_kharid_dataFrame['product_variant_id']
del tarikhche_kharid_dataFrame['product_id']
del tarikhche_kharid_dataFrame['marketplace_seller_id']
tarikhche_kharid_dataFrame

tarikhche_kharid_dataFrame.describe()

tarikhche_kharid_dataFrame.dtypes

tarikhche_kharid_dataFrame.median(axis=0)

tarikhche_kharid_dataFrame.mode(axis=0)

tarikhche_kharid_dataFrame.boxplot("selling_price")

tarikhche_kharid_dataFrame.boxplot("rrp_price")

tarikhche_kharid_dataFrame.boxplot("show_in_price_history")

tarikhche_kharid_dataFrame.boxplot("base_price")

tarikhche_kharid_dataFrame.boxplot("buy_price")

comment_dataFrame = pd.read_excel("/content/drive/MyDrive/digikalaData/comment.xlsx")
comment_dataFrame.drop_duplicates()
comment_dataFrame.dropna()
comment_dataFrame = comment_dataFrame[comment_dataFrame['comment'].str.len() >= 3]
del comment_dataFrame['product_id']
comment_dataFrame

comment_dataFrame.describe()

comment = comment_dataFrame.iloc[:, [2]]
comment['length'] = comment.apply(lambda row : len(str(row['comment']).split()), axis=1)
del comment['comment']
comment_dataFrame

"""روش اول

"""

orders_dataFrame = pd.read_csv("/content/drive/MyDrive/digikalaData/orders.csv" , sep = ",")
count_na = orders_dataFrame['Amount_Gross_Order'].isna().sum()
count_all = orders_dataFrame['Amount_Gross_Order'].count()
print("Amount_Gross_Order" , count_na/count_all)
count_na = orders_dataFrame['city_name_fa'].isna().sum()
count_all = orders_dataFrame['city_name_fa'].count()
print("city_name_fa" , count_na/count_all)

orders_dataFrame = pd.read_csv("/content/drive/MyDrive/digikalaData/orders.csv" , sep = ",")
orders_dataFrame.drop_duplicates()
orders_dataFrame.dropna()
list_cities = ["تهران" ,"مشهد","اراک","قزوین","کرج","اصفهان"]
del orders_dataFrame['ID_Order']
del orders_dataFrame['ID_Customer']
del orders_dataFrame['ID_Item']
city = orders_dataFrame.city_name_fa
orders_dataFrame = orders_dataFrame[orders_dataFrame['city_name_fa'].isin(list_cities)]

orders_dataFrame

orders_dataFrame.dtypes

orders_dataFrame.median(axis=0)

orders_dataFrame.mode(axis=0)

orders_dataFrame.boxplot("Amount_Gross_Order")

orders_dataFrame.boxplot("Quantity_item")

keifiat_dataFrame = pd.read_excel("/content/drive/MyDrive/digikalaData/keifiat.xlsx" )
keifiat_dataFrame.drop_duplicates()
keifiat_dataFrame.dropna(axis = 0, how ='any')  
del keifiat_dataFrame['product_id']
del keifiat_dataFrame['user_id']
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['comment'].str.len() >= 3]
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['product_title'].str.len() >= 3]
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['comment'].str.len() >= 3]
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['advantages'].str.len() >= 3]
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['disadvantages'].str.len() >= 3]
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['title_en'].str.len() >= 2]
persian_alphabet = ['ا','ب','پ','ت','ث','ج','چ','ح','خ','د','ذ','ر','ز','ژ','ط','ظ','ع','غ','ق','ف','ث','ص','ض','م','ن','ک','گ','س','ش','ی','ه']
keifiat_dataFrame = keifiat_dataFrame[~keifiat_dataFrame['title_en'].isin(persian_alphabet)]
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['title'].notna()]
keifiat_dataFrame = keifiat_dataFrame[keifiat_dataFrame['advantages'].notna()]
keifiat_dataFrame

keifiat_dataFrame.describe()

keifiat_dataFrame.dtypes

keifiat_dataFrame.median(axis=0)

keifiat_dataFrame.std()

keifiat_dataFrame.mode(axis=0)

keifiat_dataFrame.boxplot("likes")

keifiat_dataFrame.boxplot("dislikes")